{"version":3,"file":"static/js/165.7cbf29ff.chunk.js","mappings":"iPAEaA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAE5DC,EAAY,GAIlB,OAFAD,EAAOE,SAAQ,gBAAGC,EAAH,EAAGA,KAAH,OAAcF,EAAUG,KAAKD,EAA7B,KAGb,iCACE,gBACEE,IAAG,UAZU,mCAYV,OAAoBV,GACvBW,IAAKV,EACLW,MAAM,QACNC,OAAO,UAET,0BACGZ,EADH,mBAC0BC,MAE1B,0CAAkBC,MAClB,sCAAcC,MACd,oCAAYE,EAAUQ,KAAK,WAGhC,EClBYC,EAAe,WAAO,IAAD,IAChC,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAcxB,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAOP,IACpBQ,KAAKT,GACLU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,KAOF,6BACE,SAAC,KAAD,CAAMa,GAAE,oBAAEX,EAASY,QAAQC,aAAnB,aAAE,EAAwBC,YAA1B,QAAkC,IAA1C,qBACClB,GAAc,SAACnB,EAAD,CAAWC,MAAOkB,KAAkB,sCACnD,2BACE,yBACE,SAAC,KAAD,CAAMe,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["components/MovieCard/MovieCard.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  const genreList = [];\n\n  genres.forEach(({ name }) => genreList.push(name));\n\n  return (\n    <>\n      <img\n        src={`${BASE_IMG_URL}${poster_path}`}\n        alt={title}\n        width=\"240px\"\n        height=\"auto\"\n      />\n      <h2>\n        {title}, Release date: {release_date}\n      </h2>\n      <p>Vote average: {vote_average}</p>\n      <p>Overview: {overview}</p>\n      <p>Genres: {genreList.join(', ')}</p>\n    </>\n  );\n};\n","import { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getFilmsDetails } from 'components/services/themoviedbAPI';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\n\n\nexport const MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useRef(useLocation());\n\n\n\n  useEffect(() => {\n    getFilmsDetails(Number(movieId))\n      .then(setFilmDetails)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n\n\n\n\n  return (\n    <main>\n      <Link to={location.current.state?.from ?? '/'}>Go back</Link>\n      {filmDetails ? <MovieCard movie={filmDetails} /> : <p>NO MOVIES</p>}\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n};\n"],"names":["MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","genreList","forEach","name","push","src","alt","width","height","join","MovieDetails","useState","filmDetails","setFilmDetails","movieId","useParams","location","useRef","useLocation","useEffect","getFilmsDetails","Number","then","catch","error","console","log","to","current","state","from"],"sourceRoot":""}