{"version":3,"file":"static/js/836.ebaeed8b.chunk.js","mappings":"mOACA,EAA0B,2BAA1B,EAAoE,gC,SCGvDA,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EACND,EADMC,YAAaC,EACnBF,EADmBE,MAAOC,EAC1BH,EAD0BG,aAAcC,EACxCJ,EADwCI,aAAcC,EACtDL,EADsDK,SAAUC,EAChEN,EADgEM,OAE5DC,EAAY,GAIlB,OAFAD,EAAOE,SAAQ,gBAAGC,EAAH,EAAGA,KAAH,OAAcF,EAAUG,KAAKD,EAA7B,KAGb,iBAAKE,UAAWC,EAAhB,WACE,gBACEC,IAAG,UAZU,mCAYV,OAAoBZ,GACvBa,IAAKZ,EACLa,MAAM,QACNC,OAAO,UAET,gBAAKL,UAAWC,EAAhB,UACE,2BACE,2BACE,0BACGV,EADH,KACYC,EAAac,MAAM,EAAG,GADlC,QAGA,0CAAkBb,SAEpB,2BACE,uCACA,6BAAKC,SAEP,2BACE,qCACA,6BAAKE,EAAUW,KAAK,mBAM/B,ECtCD,EAA2B,+BAA3B,EAAwE,kCCyCxE,EAlCqB,WAAO,IAAD,IACzB,GAAsCC,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,EAAAA,OAcxB,OAVAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBC,OAAOP,IACpBQ,KAAKT,GACLU,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACf,GAAE,CAACV,KAOF,6BACE,SAAC,KAAD,CAAMa,GAAE,oBAAEX,EAASY,QAAQC,aAAnB,aAAE,EAAwBC,YAA1B,QAAkC,IAAK3B,UAAWC,EAA1D,qBACCQ,GAAc,SAACrB,EAAD,CAAWC,MAAOoB,KAAkB,sCACnD,gBAAIT,UAAWC,EAAf,WACE,yBACE,SAAC,KAAD,CAAMuB,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cardDiv\":\"MovieCard_cardDiv__jWYgI\",\"cardFilmInfo\":\"MovieCard_cardFilmInfo__7GHtW\"};","import css from './MovieCard.module.css';\n\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, title, release_date, vote_average, overview, genres } =\n    movie;\n  const genreList = [];\n\n  genres.forEach(({ name }) => genreList.push(name));\n\n  return (\n    <div className={css.cardDiv}>\n      <img\n        src={`${BASE_IMG_URL}${poster_path}`}\n        alt={title}\n        width=\"360px\"\n        height=\"auto\"\n      />\n      <div className={css.cardFilmInfo}>\n        <ul>\n          <li>\n            <h2>\n              {title} ({release_date.slice(0, 4)})\n            </h2>\n            <p>Vote average: {vote_average}</p>\n          </li>\n          <li>\n            <h3>Overview:</h3>\n            <p> {overview}</p>\n          </li>\n          <li>\n            <h3>Genres:</h3>\n            <p> {genreList.join(', ')}</p>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__haiys\",\"detailsList\":\"MovieDetails_detailsList__K8cCI\"};","import { useState, useEffect, useRef } from 'react';\nimport { Link, useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getFilmsDetails } from 'components/services/themoviedbAPI';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport css from './MovieDetails.module.css';\n\n\n\nconst MovieDetails = () => {\n  const [filmDetails, setFilmDetails] = useState(null);\n  const { movieId } = useParams();\n  const location = useRef(useLocation());\n\n\n\n  useEffect(() => {\n    getFilmsDetails(Number(movieId))\n      .then(setFilmDetails)\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n\n\n\n\n  return (\n    <main>\n      <Link to={location.current.state?.from ?? '/'} className={css.backLink}>Go back</Link>\n      {filmDetails ? <MovieCard movie={filmDetails} /> : <p>NO MOVIES</p>}\n      <ul className={css.detailsList}>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieCard","movie","poster_path","title","release_date","vote_average","overview","genres","genreList","forEach","name","push","className","css","src","alt","width","height","slice","join","useState","filmDetails","setFilmDetails","movieId","useParams","location","useRef","useLocation","useEffect","getFilmsDetails","Number","then","catch","error","console","log","to","current","state","from"],"sourceRoot":""}